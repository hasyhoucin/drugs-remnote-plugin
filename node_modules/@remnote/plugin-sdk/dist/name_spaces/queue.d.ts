import { Card } from '..';
import { NamespaceBase, InternalCallMethod } from './base';
/**
 * # Queue Namespace
 *
 * The API Queue namespace.
 */
export declare class QueueNamespace extends NamespaceBase {
    /** @hidden */
    constructor(_call: InternalCallMethod);
    getCurrentCard: () => Promise<Card | undefined>;
    /**
     * Get the number of cards remaining in the queue.
     * Returns undefined if the queue is not open.
     */
    getNumRemainingCards: () => Promise<number | undefined>;
    /**
     * Get the current streak.
     */
    getCurrentStreak: () => Promise<number | undefined>;
    /**
     * Remove the current card from the queue.
     * @param addToBackStack Whether to add the card to the back stack.
     */
    removeCurrentCardFromQueue: (addToBackStack?: boolean) => Promise<void>;
    /**
     * Get whether the queue is in lookback mode.
     * Lookback mode is when you have gone back to a previous card in the queue.
     */
    inLookbackMode: () => Promise<boolean | undefined>;
}
